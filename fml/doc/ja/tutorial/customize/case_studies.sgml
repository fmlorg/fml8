<!--
   $FML: case_studies.sgml,v 1.2 2003/02/16 14:35:51 fukachan Exp $
-->


<sect1 id="sect.casestudy.01">
	<title>
	ケーススタディ: オフィス (1)
	</title>

<para>
ヘッダ関連では、
Subject: にヘッダをつけない。
<screen>
article_header_rewrite_rules	-=	rewrite_article_subject_tag
</screen>
そして、X-ML-Name: 部分の mlname にオフィス名をつける。
つまり、mlname から office#mlname へ変更だ。
<screen>
# office#$mlname
x_ml_name                       =       office#$ml_name
</screen>
</para>

<para>
記事は誰でも投稿可能だ。
<screen>
post_restrictions		=	permit_anyone
</screen>
そして、フィルタの多くを使わない。
<screen>
use_body_filter				=	no
use_article_body_filter			=	no
use_article_non_mime_filter		=	no
use_article_mime_component_filter	=	no
use_article_text_plain_filter		=	no
</screen>
長期的な展望を踏まえるなら、
仕事のメールは数が多いので数万通単位で記事を保存するだろう。
よって、記事のスプールは subdir 形式とするとよい。
<screen>
spool_type			=	subdir
</screen>
</para>

<para>
なお、コマンドメールは使わない。
<screen>
use_command_mail_program	=	no
</screen>
コマンドメールそのものを禁止するには、aliases から該当するエントリを省
くことが確実だ。だが、ＭＬを作成するたびに、aliases から削除することは
ミス操作を誘い易い。また、CGI 操作の場合、CGI 操作者が aliases の操作
をするのはおかしい。
そういったことを想定し、コマンドメール用のプログラムが一度は起動するが、
すぐ終るという設定にしている。これが
<screen>
use_command_mail_program	=	no
</screen>
という設定だ。
</para>

</sect1>


<sect1 id="sect.casestudy.02">
	<title>
	ケーススタディ: オフィス (2)
	</title>

<para>
以下の設定を /etc/fml/site_default_config.cf に書き、
全ＭＬに反映させる。
</para>

<para>
まず、記事のヘッダにはＭＬ名を大文字にしてつける。
<screen>
article_subject_tag = (\U$ml_name\E %05d)
</screen>
たとえば 
support@example.co.jp ＭＬは
<screen>
Subject: (SUPPORT 10000)
</screen>
などとなる。
</para>

<para>
そして、過去記事を参照させるために、コマンドメールの使用を許す。
ただし、自ドメイン(例: example.co.jp )からのリクエストに対してのみ、
コマンドメールの使用を許す。
これは、HOOK で実現する。
<screen>
$command_verify_request_end_hook = q{
        my $cred = $curproc->{ credential };
        my $from = $cred->sender();

        unless ($from =~ /\@example\.co\.jp/i) {
                $curproc->stop_this_process();
                LogError("deny command request from $from");
        }
};
</screen>  
</para>


</sect1>
