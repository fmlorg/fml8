<!--
   $FML: mailmagazine.sgml,v 1.4 2004/04/07 11:07:02 fukachan Exp $
-->


<sect1 id="config.mailmagazine.1">
	<title>
	ケーススタディ: メールマガジン (1)
	</title>


<para>
メールマガジンは投稿可能なメンバーリストをカスタマイズすることで行なえ
ます。
</para>

<para>
member_maps から $primary_member_maps を抜き、
代わりに投稿可能なメンバーのリスト(ここでは 
$ml_home_dir/members-mailmag としましょう)を
member_maps を追加します。
<screen>
member_maps	=	$ml_home_dir/members-mailmag
</screen>
なお subscribe コマンドの利用方法はデフォルトのままで構いません。
<footnote>
<para>
fml 4.0 のように subscribe コマンドの仕方を変更するといったやり方
ではありません。
メンバーの認証方法を config.cf できめ細かくコントロールできるので、
それを使う方が、subscribe コマンドを変更するより簡単ですしね。
</para>
</footnote>
</para>

<para>
なお、この場合 subscribe したアドレスが
members というファイルに追加されていきますが、
このファイルは使わないという設定なので大丈夫です。
気にはなるかも知れませんが…
</para>

<para>
別解としては、逆に
<screen>
primary_member_map	=	$tmp_dir/members-dummy
</screen>
などとメンバーリストの新規分追加先を変更して闇に葬り、
membersには投稿可能なアドレスだけを書くというやり方もあります。
このほうが &fml4; 風で分かりやすいでしょう。
</para>

</sect1>


<sect1 id="config.mailmagazine.2">
	<title>
	ケーススタディ: メールマガジン (2)
	</title>

<para>
2004/06 後半以降: キューイングシステムの改変により、「わざとエラーにし
てメールキューに落し、メールの中身を確認してから flush する(配送する)」
なんて技もできるようになりました。
</para>

<para>
設定は次のようになります。
</para>

<para>
config.cf では、次のように存在しないポートでも指定しておきます。
<screen>
smtp_servers = 無意味なトランスポート

[例]

smtp_servers = 127.0.0.1:2025
</screen>
こうしておくと、
記事を投稿したさいには配送エラーになり、
メールキューに落ちます。
</para>

<para>
メールの中身や配送先を間違えなかったと確信があり、
配送して良いと判断した場合、
正しいトランスポートを指定してキューをフラッシュしてください。
<screen>
% fml -o smtp_servers=正しいトランスポート ＭＬ名 flushq

[例]

% fml -o smtp_servers=127.0.0.1:25 ＭＬ名 flushq
</screen>
</para>

</sect1>
