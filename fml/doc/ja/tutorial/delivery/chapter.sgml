<!--
    $FML: chapter.sgml,v 1.7 2002/07/02 10:39:31 fukachan Exp $
-->

<chapter id="delivery">
	<TITLE>
	&fmldevel; のメール配送システム
	</TITLE>

<sect1 id="fml5-delivery">
	<title>
	&fml4; と &fmldevel; の相違点
	</title>

<para>
&fmldevel; の最大の目的の一つは、メンバーリストの取得と操作の統合と抽
象化です。配送には抽象化された Mail::Delivery クラスを次のように使いま
す。
</para>

<para>
Mail::Delivery::* に属するクラスは SMTP および LMTP 配送へのインターフェ
イスを提供します。
つまり
Mail::Delivery は
Mail::Delivery 以下の派生クラス
SMTP
ESMTP
LMTP
へのインターフェイスを提供するアダプター層です。
</para>

<para>
例えば次のように使います。
<screen>
    use Mail::Delivery::SMTP;
    my $service = new Mail::Delivery::SMTP;
    if ($service->error) { Log($service->error); return;}

    $service->deliver(
                      {
                          mta             => '127.0.0.1:25',

                          smtp_sender     => 'rudo@nuinui.net',
                          recipient_maps  => $recipient_maps,
                          recipient_limit => 1000,

                          mesage          => $message
                      });
</screen>
ここで $message は
<link linkend="module.mail.message">
Mail::Message
</link>
オブジェクトです。
</para>

</sect1>


<sect1>
	<title>
	<link linkend="module.mail.message">
	Mail::Message
	</link>
	オブジェクト
	</title>

<para>
このオブジェクトはメールを解析し、
<screen>
header -> body
header -> preamble -> part1 -> part2 -> trailor (multipart)
</screen>
のようにオブジェクトが数珠つなぎのようなデータ構造を作ります。
</para>

<para>
<link linkend="module.mail.message">
Mail::Message
</link>
クラスは
このようなデータ構造に対して、さまざまなオペレーションを提供します。
</para>

</sect1>


<!-- mail queue -->
&sect.mailqueue;

</chapter>
