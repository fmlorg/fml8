<!--
   $FML: cgi.sgml,v 1.8 2002/07/19 03:21:55 fukachan Exp $
-->

<chapter id="internalcgi">
	<title>
	CGI プロセスの内部構造
	</title>


<sect1 id="internalcgi.method">
	<title>
	メソッド
	</title>

<para>
FML::CGI のクラスは以下のメソッド群を実装して下さい。
<screen>
html_start()
run_cgi_main()
run_cgi_title()
run_cgi_navigator()
run_cgi_menu()
run_cgi_command_help()
run_cgi_options()
html_end()
</screen>
ここで
html_start() は、
ようするに HTML の先頭部分、たとえば DOCTYPE から BODY あたりを、
html_end() は
/BODY と /HTML を表示する部分をカスタマイズするために用います。
run_◎◎ メソッド群では BODY の部分を定義しています。
</para>

<para>
$curproc の run() メソッドは
<screen>
html_start()
run_cgi_XXX() 群を実行(テーブル状に出力を配置する)
html_end()
</screen>
を順番に実行しています。
つまり CGI プロセスの実行のフロー( FML::Process::Flow 参照)は
<screen>
new()
prepare()
verify_request()
run()
   html_start()
   run_cgi_○○()
   html_end()
finish()
</screen>
ということになります。
</para>

</sect1>


<sect1 id="internalcgi.frames">
	<title>
	CGI の画面の作りとメソッド
	</title>

<para>
fml CGI スクリプトでは典型的な画面が次のように分割されると考えています。
<screen>
          ヘッダ
◎        メニュー    ◎
バー１    メイン      バー２
◎        メニュー    ◎
          フッタ
</screen>
なお、バー１と２の部分は navigation などと呼ばれます。
</para>


<para>
ヘッダ部分( HTTP ヘッダではなく、HTML の DOCTYPE から BODY あたり)
やフッタの部分は
html_start() および html_end() で HTML コードを生成するでしょう。
BODY の中身は真中の３ｘ３のテーブル状の部分で、run_cgi() から呼ばれる
メソッドが生成しています。
</para>


<para>
run_cgi() の中身をもっと細かくすることと、
画面上のどの部分をどのメソッドが記述するのかを指定できる
アクセスメソッドが必要です。
また BODY の中身も、これにあわせて、より細かく
<screen>
nw   north  ne
west center east
sw   south  se
</screen>
という３x３の精度で表現されています。
</para>


</sect1>


<sect1 id="internalcgi.trampoline">
	<title>
	画面とトランポリン機構
	</title>

<para>
CGI の表示部分は
FML::Command::
以下のクラスに移動させます。
しかしながら、
FML::Command::
の中に実体があるとは限らず
object composition の形式で
FML::CGI:: クラスが提供するメニュー生成クラスを
使うことになるでしょう。
たとえば subscribe の場合
<screen>
FML::CGI::Admin::Main →
FML::Command::Admin::subscribe →
FML::CGI::Admin::User →
メニューの表示
</screen>
などとなっていて、Mach のトランポリン機構のように、いったりきたりしま
す。
</para>

</sect1>


<sect1 id="internalcgi.problems">
	<title>
	備考: FML::CGI::Admin:: ではハードコーディングするしかない？	
	</title>

<para>
例えば FML::CGI::Admin::User では
$comname と maps の関係がハードコーディングされてるけれど、
でも、これはしかたないんじゃないかなぁ…
</para>

<para>
config に追い出すと、とてつもなくいっぱい変数が必要になりそうだ。
</para>

</sect1>


</chapter>
