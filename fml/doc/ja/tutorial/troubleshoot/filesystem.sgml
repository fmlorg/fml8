<!--
   $FML: chapter.sgml,v 1.3 2002/11/09 14:16:19 fukachan Exp $
-->


<sect1 id="troubleshoot.filesystem">
	<title>
	ファイルシステムがエラーの場合の動作は？
	</title>

<para>
基本的には、MTAによる再送処理が行なわれるようにfmlが異常終了するか、
無理矢理頑張って配送処理を行なうか？となります。
ログファイルやサマリファイルには欠落が出得るが、
投稿された記事の内容が失われることだけはないつもりです。
</para>

<para>
以下、記事の配送処理でファイルシステムのエラーで書き込みがうまくいかな
い時、何が起こるかを説明しましょう。
</para>


<sect2>
	<title>
	MTA から fml へメールが渡される時
	</title>

<para>
fml は STDIN から読みこんだメールを一度ディスクに書きます。
この書き込みが成功すれば、処理を進めます。失敗した場合、
MTA に再挑戦してもらうため、exit(EX_TEMPFAIL)でプロセスを異常終了させます。
くわしくは
<link linkend="message.queue.incoming">
<xref linkend="message.queue.incoming">
</link>
を参照してください。
</para>

</sect2>


<sect2>
	<title>
	記事番号を更新に失敗した場合
	</title>

<para>
きちんと新しい記事番号（＋１されたもの）がシークエンスファイル(seq)に
書き込めたか(ファイルに書いて、閉じて、再び開いて、再度読みこんでみる)
を確認し、成功していれば、処理を進めます。
失敗していた場合、exit(EX_TEMPFAIL) で終了します。
</para>

</sect2>


<caution>
<para>
記事番号は更新してしまったので、この処理以降、exit(EX_TEMPFAIL)
することはしません。
</para>
</caution>


<sect2>
	<title>
	記事の保存の際にエラーになった場合
	</title>

<para>
記事の書き込みはできませんが、オリジナルのメールは既にディスクに書き込
まれています。記事の方は、ヘッダ部分には色々と追加がありますが、本文は
オリジナルメールのものと一緒です。そこで、キューディレクトリから
「spool/割り当てられた記事番号」ファイルへlink(2)することで、記事の内
容だけは保存するようにします。
</para>

<para>
配送するべき記事をディスクに保存することができませんでしたが、
メモリ上に配送するべき記事はあるので、配送処理には挑戦します。
</para>

<para>
ただ、このときはメールキューに書き込めないため、配送過程でエラーが生じ
た場合、配送は中途半端に終了となります。
</para>

<para>
この部分は、別のプロセスがこの記事用のメールキューを生成して配送を試み
るように拡張するべきでしょう。いまのところは未実装です。
</para>

</sect2>


<sect2>
	<title>
	配送処理
	</title>

<para>
配送するべき内容をキューに書き、書き込み成功後に配送処理が行なわれます。
</para>

<para>
キューに書き込めない場合、メモリ上のデータの配送を試みますが、
配送過程でエラーが生じた場合、配送は中途半端に終了となります。
</para>

<para>
トリッキーな拡張が必要ではありますが、ちゃんとキューイングをフェイクで
きる仕組みが必要でしょう。
</para>

<para>
くわしくは
<link linkend="message.queue.outgoing">
<xref linkend="message.queue.outgoing">
</link>
を参照してください。
</para>

</sect2>


</sect1>
