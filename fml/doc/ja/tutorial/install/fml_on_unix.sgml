<!--
	$FML: chapter.sgml,v 1.11 2002/04/01 23:41:02 fukachan Exp $
-->

<chapter id="install.fml.unix">
	<title>
	UNIX 上での fml のインストール
	</title>


<!-- ====================================================== -->
<sect1 id="install.fml.unix.configure">
	<title>
	概要
	</title>


<para>
configure (GNU autoconf) および make を実行して下さい。
なお configure の前に、適宜、ユーザ fml とグループ fml を作ってください。
<screen>
% su root
# groupadd fml
# useradd -g fml -m fml
# ./configure
# make install
</screen>
configure が適宜、変数を書き換えてくれます。
make install はシェルスクリプト INSTALL.sh を実行するだけです :-)
</para>

<para>
変更が必要なら configure の引数で変更して下さい。
変更できる変数は以下のものです。
fml では各ディレクトリにさらに /fml といった suffix をつけます。
変更できるのはその直前の prefix 部分までです。
<screen>
変数            configure のデフォルト値    fml の利用するディレクトリ
--------------------------------------------------------
prefix          /usr/local                  /usr/local
exec_prefix     /usr/local
bindir          ${exec_prefix}/bin          /usr/local/bin
sbindir         ${exec_prefix}/sbin         /usr/local/sbin
libexecdir      ${exec_prefix}/libexec      /usr/local/libexec/fml
datadir         ${prefix}/share             /usr/local/share/fml
sysconfdir      ${prefix}/etc               /usr/local/etc/fml
sharedstatedir  ${prefix}/com
localstatedir   ${prefix}/var
libdir          ${exec_prefix}/lib          /usr/local/lib/fml
includedir      ${prefix}/include
oldincludedir   /usr/include
infodir         ${prefix}/info
mandir          ${prefix}/man
</screen>
また
<screen>
fmlconfdir      $sysconfidr/fml             /usr/local/etc/fml        
mlspooldir      /var/spool/ml               /var/spool/ml
fml_owner       fml                         fml
fml_group       fml                         fml
default_domain  推測する                    推測する
</screen>
これらの変数は、configure の引数で上書きすることができます。
これらのオプションは
<screen>
configure --help 
</screen>
で表示されます。
<screen>
  --without-warning       run perl as perl without -w
  --with-fmlconfdir=DIR   use DIR instead of SYSCONFDIR/fml
  --with-mlspooldir=DIR   use DIR instead of /var/spool/ml
  --with-fml-owner=USER   use USER instead of fml
  --with-fml-group=GROUP  use GROUP instead of fml
  --with-default-domain=DOMAIN  use DOMAIN as the ML domain
</screen>

</para>


<para>
サンプル
<screen>
# ./configure --with-fmlconfdir=/etc/fml
loading cache ./config.cache
checking for perl... (cached) perl
checking for perl... (cached) /usr/local/bin/perl
checking whether optional useful commands are available or not
checking for cksum... (cached) /usr/bin/cksum
checking for md5... (cached) /usr/bin/md5
checking for ls... (cached) /bin/ls
checking for tar... (cached) /usr/bin/tar
checking for gzip... (cached) /usr/bin/gzip
checking for zcat... (cached) /usr/bin/zcat
checking for gunzip... (cached) /usr/bin/gunzip
checking for lha... (cached) /usr/pkg/bin/lha
checking for ish... no
checking for bzip2... (cached) /usr/bin/bzip2
checking for bunzip2... (cached) /usr/bin/bunzip2
checking for uuencode... (cached) /usr/bin/uuencode
checking for compress... (cached) /usr/bin/compress
checking for sendmail... (cached) /usr/sbin/sendmail
checking for newaliases... (cached) /usr/bin/newaliases
checking for postfix... (cached) /usr/sbin/postfix
checking for postalias... (cached) /usr/sbin/postalias
checking for postconf... (cached) /usr/sbin/postconf
checking for postmap... (cached) /usr/sbin/postmap
checking for nkf... (cached) /usr/pkg/bin/nkf
checking for kakasi... no
checking for namazu... no
checking for pgp... (cached) /usr/pkg/bin/pgp
checking for pgp5... no
checking for pgpe... no
checking for pgpk... no
checking for pgps... no
checking for pgpv... no
checking for gpg... no
checking for less... (cached) /usr/bin/less
checking for more... (cached) /usr/bin/more
checking for w3m... (cached) /usr/pkg/bin/w3m
updating cache ./config.cache
creating ./config.status
creating config.sh
creating fml/etc/main.cf
creating fml/etc/default_config.cf.ja
creating fml/etc/site_default_config.cf
creating fml/libexec/loader
creating fml/bin/fmlalias
creating fml/bin/fmlconf
creating fml/bin/fmldoc
creating fml/bin/fmlhtmlify
creating fml/bin/fmlsch
creating fml/bin/fmlthread
creating fml/bin/fmlspool
creating fml/bin/makefml
enabled perl -w

fml has been configure with the following options:

                 prefix: /usr/local
            exec_prefix: ${prefix}
                 bindir: ${exec_prefix}/bin
                sbindir: ${exec_prefix}/sbin
                lib_dir: ${exec_prefix}/lib
            libexec_dir: ${exec_prefix}/libexec
                 mandir: ${prefix}/man
                datadir: ${prefix}/share

      fml process owner: fml
      fml process group: fml
             fmlconfdir: /etc/fml
             mlspooldir: /var/spool/ml
         default domain: home.fml.org

Now you must run "make install".
</screen>
</para>

</sect1>


<!-- ====================================================== -->
<sect1>
	<title>
	各ディレクトリの役割
	</title>

<para>
それぞれのディレクトリの役割は次の通りです。
なお、デフォルトでは /usr/local 以下にインストールされます。
</para>

<para>
  <table>
    	<title>
	ディレクトリの構造
	</title>

    <tgroup cols=2>

      <thead>
        <row>
          <entry> ディレクトリ 		</entry>
          <entry> 説明			</entry>
        </row>
      </thead>

      <tbody>
        <row>
          <entry> /usr/local/etc/fml	</entry>
          <entry>
	基本設定ファイルを置く場所。
	( fml 4 の /usr/local/fml/.fml や default_config.ph 相当)

	バージョンやライブラリの場所(ディレクトリ)などを指定する。
          </entry>
        </row>

        <row>
          <entry> /usr/local/libexec/fml 		</entry>
          <entry>
	実行ファイル ( fml 4 の /usr/local/fml )
	  </entry>
        </row>

        <row>
          <entry>
		/usr/local/lib/fml
	  </entry>
          <entry>
		ライブラリ ( fml 4 の /usr/local/fml )
	  </entry>
        </row>

        <row>
          <entry>
		/usr/local/share/fml
	  </entry>
          <entry>
		メッセージなどのテンプレート、
		言語依存です。
	  </entry>
        </row>

        <row>
          <entry>
		/var/spool/ml
	  </entry>
          <entry>
		ＭＬのホームディレクトリ。fml 4 と同じ目的です。

		注意: /var/spool/ml のオーナは INSTALL.sh の
		owner 変数(デフォルトはユーザ fml)に設定されます。
	  </entry>
        </row>
      </tbody>

    </tgroup>
  </table>
</para>
</sect1>


<!--
    ======================================================
	main.cf の例
    ======================================================
-->
&sect.main.cf;


<!-- ====================================================== -->

</chapter>
