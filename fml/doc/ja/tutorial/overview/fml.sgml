<!--
   $FML: chapter.sgml,v 1.10 2002/04/01 23:41:06 fukachan Exp $
-->

<chapter id="overview">
	<title>
	&fmldevel; の概要
	</title>

<important>

<para>
&fmldevel; は &fml4; 相当のものを完全に一から書き直すプロジェクトです。
使い方の見かけは &fml4; に"似せて"います。
主な注意点は
root での作業、
configure の使用、
そして /usr/local/etc/fml/ 以下のファイル、
特に /usr/local/etc/fml/main.cf というグローバルな設定ファイルの編集です。
</para>

</important>


<!-- ======================================================== -->
<sect1>
	<title>
	&fmldevel; でできること
	</title>

<para>
&fml4; の再実装にあたっての山場はすでに越えたと思います。
でも、こまごまとしたものはいろいろと残っていますが…
</para>

<para>

    <itemizedlist>


    <listitem>
	<para>
	postfix スタイルの設定ファイル
	</para>
    </listitem>


    <listitem>
	<para>
	配送、
	ヘッダの書き換え、
	フィルタ( 4.0 の Envelope Filter に相当するもの )
	</para>
    </listitem>

    <listitem>
	<para>
	MTA が起動するメインのプログラム:
	fml.pl distribute command
	</para>
    </listitem>


    <listitem>
	<para>
	いくつかのユーティリティ:
	fmlconf
	fmldoc
	fmlhtmlify
	fmlsch
	fmlthread
	fmlspool
	makefml
	</para>
    </listitem>


    <listitem>
	<para>
	CGI :
	fmlsch.cgi
	fmlthread.cgi
	makefml.cgi
	</para>
    </listitem>


    <listitem>
	<para>
	IPv6 による配送
	</para>
    </listitem>


    <listitem>
	<para>
	スレッド追跡システム(CUI と CGI を含む):
	(fmlthread fmlthread.cgi)
	</para>
    </listitem>


    <listitem>
	<para>
	記事の HTML 化システム:
	fmlhtmlify および makefml に HTML 化コマンドがあります。
	</para>
    </listitem>


    <listitem>
	<para>
	<link linkend="module.io.adapter">
	抽象化 IO 層
	</link>
	メンバーファイルをファイル、/etc/group, NIS, MySQL
	から取り出すことができます。
	</para>
    </listitem>
    </itemizedlist>
</para>

</sect1>


<!-- ======================================================== -->
<sect1>
	<title>
	インストール作業の概略
	</title>

<para>
以下で、特に触れていない概念(例: ＭＬとは？)については &fml4; と同様です。
くわしくは &fml4; の資料(
	<ulink url="http://www.fml.org/fml/">
	http://www.fml.org/fml/
	</ulink>
	や
	&fmlbible;
)を適宜、参照して下さい。
</para>

<para>
さて、いつものように elena ＭＬの作成過程を例にとりましょう。
インストールのおおまかな流れは次のようになります。
</para>


<orderedlist>
   <listitem>
	<para>
	<link linkend="download">
	ソースをダウンロードして、展開して下さい。
	</link>
	</para>
   </listitem>

   <listitem>
	<para>
	<link linkend="install.fml.unix">
	ユーザ root でインストールをする。
	まず、ユーザ fml とグループ fml を作成し、
	<link linkend="install.fml.unix.configure">
	configure
	</link>
	および make を実行して下さい。
	</link>
<screen>
% su root
# groupadd fml
# useradd -m -g fml fml
# ./configure
# make install
</screen>
	</para>

	<para>
	(デフォルトでは)インストーラは /usr/local/bin
		<footnote>
		<para>
		デフォルトでは /usr/local ディレクトリ以下に
		適宜サブディレクトリが作られます。
		<link linkend="install.fml.unix.configure">
		configure のオプション
		</link>
		で変更が可能です。
		</para>
		</footnote>
	に
	fmldoc fmlconf fmlthread makefml fmlhtmlify fmlsch
	などをインストールします。
	実は、
	これらは
	/usr/local/libexec/fml の下の実体を呼び出す単なる
	wrapper です。
	</para>
   </listitem>


   <listitem>
	<para>
	<link linkend="guide.newml">
	ユーザ fml で elena ＭＬを作る。
	</link>
<screen>
% su fml
% makefml newml elena
</screen>
	</para>
   </listitem>


   <listitem>
	<para>
	MTA から fml を起動するために
	MTA の設定をしてください。
	</para>
   </listitem>


   <listitem>
	<para>
	ＭＬ の動作テストをしてください。
	</para>
   </listitem>


   <listitem>
	<para>
	<link linkend="guide.config.cf">
	ＭＬ のカスタマイズをする。
	</link>
	</para>
   </listitem>

</orderedlist>

<warning>
<para>
&fml4; と異なり root でインストールすることに注意して下さい。
</para>
</warning>

</sect1>


<!-- ============================================================= -->
<sect1 id="guide.newml">

   <title> ＭＬを作る </title>

<para>
makefml を使ってＭＬを作成します。
デフォルトのドメイン(例: fml.org)の場合、
makefml 使い方は &fml4; の時と同様です。
elena@fml.org ＭＬを作るには
<screen>
% su fml
% makefml newml elena
</screen>
とします。
詳しくは
<link linkend="usage.newml">
<xref linkend="usage.newml">
</link>
を参照してください。
</para>

<para>
一方、バーチャルドメイン(nuinui.net)の場合は、
アドレスを全部指定して下さい。
elena@nuinui.net を作る場合は、次のように実行して下さい。
<screen>
% su fml
% makefml newml elena@nuinui.net
</screen>
</para>

</sect1>


<!-- ============================================================= -->
<sect1 id="guide.subscribe">

   <title> ＭＬのメンバーを登録する </title>

<para>
デフォルトのドメイン(例: fml.org)の場合は、
<screen>
% su fml
% makefml subscribe elena rudo@nuinui.net
</screen>
で構いません。
一方、バーチャルドメイン(nuinui.net)の場合は、
アドレスを全部指定して下さい。
<screen>
% su fml
% makefml subscribe elena@nuinui.net fukachan@sapporo.iij.ad.jp
</screen>
</para>

</sect1>


<!-- ============================================================= -->
<sect1 id="guide.unsubscribe">

   <title> ＭＬのメンバーから削除する </title>

<para>
デフォルトのドメイン(例: fml.org)の場合は、
<screen>
% su fml
% makefml unsubscribe elena rudo@nuinui.net
</screen>
で構いません。
一方、バーチャルドメイン(nuinui.net)の場合は、
アドレスを全部指定して下さい。
<screen>
% su fml
% makefml unsubscribe elena@nuinui.net fukachan@sapporo.iij.ad.jp
</screen>
</para>

</sect1>


<!-- ============================================================= -->
<sect1 id="guide.config.cf">
	<title>
	ＭＬの設定をカスタマイズをする
	</title>

<warning>
<para>
まだ makefml config は使えません。ごめんなさい。
ファイルを手で編集して下さい。
</para>
</warning>


<para>
elena ＭＬの設定のカスタマイズは /var/spool/ml/elena/config.cf を編集
して下さい。
フォーマットは postfix の設定ファイルと同様というとわかりやすいでしょう。
(&fml4; の config.ph よりは cf にやや近いですが)
</para>

<para>
適宜必要な項目だけを追加して下さい。
指定しない場合はデフォルト値が使われます。
デフォルト値はインストールしたバージョンに依存しており、
<screen>
/usr/local/etc/fml/defaults/バージョン番号/default_config.cf
</screen>
というファイル中で定義されています。
これは perl のライブラリが /usr/local/lib/perl/5.00503/ のように
バージョン番号付のディレクトリに置かれるのと似ています。
</para>

<para>
また、ライブラリなどのインストール先も fml のバージョンごとに
別のディレクトリになっていることに注意して下さい。
この仕組みのおかげでアップグレードしても元に戻すのが簡単です。
これは &fmldevel; の特徴です。
</para>

</sect1>


</chapter>
