<!--
   $FML: preface.sgml,v 1.14 2002/04/13 10:59:02 fukachan Exp $
-->


<preface id="preface">
	<title>
	前書き
	</title>


<sect1 id="status">
	<title>
	fml-devel (fml 開発版)の現状と TODO 
	</title>


<warning>
<para>
現状の &fml5; は運用ベースの実証実験の段階に入りました。
基本的な機能はかなり実装されました。
4.0 の細かな部分までフォローできているわけではありませんが…
</para>

<para>
その意味で、いろいろな機能を使いたい場合には、まだまだ
<ulink url="http://www.fml.org/software/fml/menu.html">
4.0 stable
</ulink>
を使う方がよいでしょう。
</para>

<para>
現在の fml-devel で動く機能そして TODO リストは
<ulink url="../../../fml/doc/ja/todo/STATUS.html">
http://www.fml.org/software/fml-devel/fml/doc/ja/todo/STATUS.html
</ulink>
を参照して下さい。
</para>
</warning>

</sect1>


<!-- ======================================================== -->
<sect1 id="way.to.fmlng">

	<title>
	次世代 fml への道
	</title>

<para>
&fml5; プロジェクトは &fml4; を 
1 から書き直す次世代 fml プロジェクトの総称
です。
これは &fml4; までに至る約 10 年の経験を再実装する試みといえます。
ざっくりとしたイメージしては
4.0 と &fml5; の違いは sendmail と postfix のような関係と思って下さい。
</para>

<para>
次世代 fml の考え方は現代的観点から
 &fml4; の”機能”を再構想/再実装することです。
これはデザインを一から考え直すことに加え、
機能や変数の整理整頓も含みます。
</para>

<para>
例えば fml (4.0) を使っていて問題になるのは、
「特定のホストで、FFS の上にファイルを書く」という
のが基本デザインから継承された構造です。
では、
冗長化構成のため NFS にするとどうなる？
トラブルチケットシステムと連動したい場合は？
SQL サーバとも連動したいですね？
う〜ん…
</para>

<para>
また、構造論ではなく単に自分で欲しい機能があります。
fml 自体がバグトラッキングシステムを提供して欲しいし、
bug tracking system もサーチエンジンもできるだけメールと連動して
いろいろして欲しい。
それらをよい簡単に書けてほしいです。
</para>

<para>
まず最初にするべきことは 4.0 の機能とそのデザインについての再検討です。
例えば、次のような項目が考えられます。

    <itemizedlist>


    <listitem>
	<para>
	&fml5; へ引き継ぐべき機能は何か？
	</para>
    </listitem>


    <listitem>
	<para>
	&fml5; でもっとうまく、
	よりカスタマイズしやすいものに実装できないか？
	</para>
    </listitem>


    <listitem>
	<para>
	もう要らない機能はどれか？
	</para>
    </listitem>

    </itemizedlist>

これらについての意見を募集したいと思っています。ですが、漠然と議論して
もしょうがないので、議論の叩き台として動くものを作りつつあります。
</para>

<para>
<ulink url="http://www.fml.org/software/fml-devel/">
http://www.fml.org/software/fml-devel/
</ulink>
</para>

<para>
<ulink url="ftp://ftp.fml.org/pub/fml-devel/">
ftp://ftp.fml.org/pub/fml-devel/
</ulink>
</para>

<para>
これは、あくまでもアイデアを表現するためのものなので、機能は最低限のも
のしかありませんが、十分動きます。
作者は fml-devel ＭＬをはじめ、
いくつかの場所で運用ベースで使っています。
もっとも、
変数名もアーキテクチャアも本決まりではないので、
将来変わる可能性はありますが…
</para>

<para>
最初の試金石バージョンがリリースされる際には、
<screen>
fml 1.2 相当の最低限の機能
+ makefml (CUI + CGI) が加わったもの
+ 自動スレッド追跡システム
+ 自動 HTML 化機構
</screen>
が動くようになっている見通しです。
</para>

</sect1>


<!-- ======================================================== -->
<sect1 id="fml.and.fmlng">
	<title>
	&fml4; と &fml5; の関係
	</title>

<para>
4.0 と &fml5; は
&fml5; で作られたモジュールのマージと
4.0 自体のコードの保守をしつつ、
並行開発されていっています。
</para>

<para>
そのため 4.0 系は fml project 全体の中で、
相対的に stable に近い current という位置付けになります。
4.0 の bug fix は 4.0.x (4.0.1 4.0.2 …)としてまとめられリリー
スれていく予定です。
4.0-current は 4.0.x のためのテストケースであり、
&fml5; は本当の開発コード( fml-current )という位置付けといえます。
</para>

<screen>
               fml-devel
             -----------------------------> 5.0 or 8.0 (本プロジェクトの目標)
                       ↑↓交流
1.2  〜 4.0 ------------------------------> 4.0-current
              |      |
            4.0.1   4.0.2 .... (リリース / 4.0-stable バージョン)
</screen>


<para>
&fml5; 用に作られたモジュールを &fml4; へ輸入する予定です。
たとえば 4.0 でも独立性の高い mead (エラーメール解析プログラム)や、
スレッド追跡システムです。
これは &fml5; の機能を 4.0 でテストをするいう意味あいもあります。
この作業は 4.0.4 か 4.0.5 以降本格化する予定です。
</para>

<para>
言い替えると、
4.0 系列の bug fix は 4.0 で行ないますが、
新機能は、&fml5; で開発したものをモジュール単位で 4.0 へ輸入していく
形をとります。
</para>


</sect1>


<!-- ======================================================== -->
<sect1>
	<title>
	&fml5; で既に動く機能
	</title>

<para>

    <itemizedlist>


    <listitem>
	<para>
	postfix スタイルの設定ファイル
	</para>
    </listitem>


    <listitem>
	<para>
	配送、
	ヘッダの書き換え、
	フィルタ( 4.0 の Envelope Filter に相当するもの )
	</para>
    </listitem>

    <listitem>
	<para>
	MTA が起動するメインのプログラム:
	fml.pl distribute command
	</para>
    </listitem>


    <listitem>
	<para>
	いくつかのユーティリティ:
	fmlconf
	fmldoc
	fmlhtmlify
	fmlsch
	fmlthread
	makefml
	</para>
    </listitem>


    <listitem>
	<para>
	CGI :
	fmlsch.cgi
	fmlthread.cgi
	makefml.cgi
	</para>
    </listitem>


    <listitem>
	<para>
	IPv6 による配送
	</para>
    </listitem>


    <listitem>
	<para>
	スレッド追跡システム(CUI と CGI を含む):
	(fmlthread fmlthread.cgi)
	</para>
    </listitem>


    <listitem>
	<para>
	記事の HTML 化システム:
	fmlhtmlify および makefml に HTML 化コマンドがあります。
	</para>
    </listitem>


    <listitem>
	<para>
	<link linkend="module.io.adapter">
	抽象化 IO 層
	</link>
	メンバーファイルをファイル、/etc/group, NIS, MySQL
	から取り出すことができます。
	</para>
    </listitem>
    </itemizedlist>
</para>

</sect1>


<!-- ======================================================== -->
<sect1 id="mailinglist">

	<title>
	メーリングリスト
	</title>

<para>
fml 5 の議論のためのメーリングリストを用意してあります。
</para>

<para>
登録の仕方はいつもと一緒です。

fml-devel MLへの自動登録は fml-devel-ctl@ffs.fml.org へ
subscribe の後に自分の名前をローマ字で続けたフレーズをメールの"本文"
(注意: メールの本文)に書いて送って下さい。例えば次のようになります。

<screen>
To: fml-devel-ctl@ffs.fml.org

subscribe Kinomoto Sakura
</screen>

このメールに対し、登録意志確認のメールが送り返されてきます。
そのメールに返事をしてください。
ＭＬに登録されます。
</para>

<para>
fml-devel ＭＬのログは
	<ulink url="http://www.fml.org/mlarchives/">
	http://www.fml.org/mlarchives/
	</ulink>
で公開しています。
</para>

<para>
ＭＬに参加しないが、要望等を送りたいという場合、ＭＬではなく

	<ulink url="mailto:fml-request@fml.org">
	fml-request@fml.org
	</ulink>

へメールを送って下さい。このメールは適宜 fml-devel 等に流して議論した
いと思います。他にフォワードなどされたくない場合はその旨を一筆書いてお
いて下さい。
</para>

</sect1>


<!-- ======================================================== -->
<sect1>

	<title>
	ご意見募集中
	</title>

<para>
&fml5; のアイデアのついて、
<ulink url="mailto:fml-request@fml.org">
ご意見・御感想をお待ち
</ulink>
しております。
端的にいえば 4.0 のここは受け継ぎたいが、あの機能は
どうでもよいとか、あの機能はこう実装するべきだなどといった
意見も募集しています。
</para>

</sect1>


<!-- テクニカルタームの定義を与える -->
&sect.terms;


</preface>
