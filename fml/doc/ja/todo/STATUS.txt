		STATUS: fml-devel で現在できること/できないこと
		Last Modified: $Date$ (GMT)

	* このドキュメントは"fml bible" の目次に沿って何ができて何がま
	  だできないかをリストアップしたものです。

II部　fmlのセットアップ〜MLの作成
4章　Unix上でのfmlのインストール

	ユーザ root になり、configure そして make です。
	つまり典型的なインストール手順を行なって下さい。
		# ./configure
		# make install

	fml プロセスのユーザや使用するディレクトリは
	configure のオプションで変更可能です。

	* メールサーバの設定は 4.0 の場合と同様です。

	注意: ユーザ fml を作るだけでなく、きちんとユーザ fml さんの
	      ホームディレクトリも作って下さい。

5章　Unix上でMLを作る

	"makefml newml elena" を使って下さい。
	つまり fml 4 と使い方は一緒です。
	ただし fml-devel では newml 時に設定用 CGI や、HTML 化された記事
	をおくディレクトリ ~fml/public_html/ .. を用意する点が異なります。

	* postfix ( および sendmail ) がターゲットシステムです。

	[TODO] qmail 用の設定はまだ作れません。

6章　Windows 2000/NT4上でのfmlのインストール

	[TODO] Microsoft ものは全然手をつけていません。

7章　アップグレード

	もう一度インストールをし、/etc/fml/main.cf を編集するだけです。
	main.cf の編集をするだけでアップグレードもダウングレードも
	思いのままです。

8章　Unix上でのCGIのセットアップ

	デフォルトで CGI スクリプトが用意されます。

	[TODO] .htaccess の設定支援ツールがまだありません。
		エディタでファイルを消すなり、編集するなりして下さい。

	[TODO] CGI からのエラーの上げ方

	[TODO] CGI の画面を制御するアクセスメソッドを作る
		$cgi->configure( { header => \&header(), } );


9章　fmlの動作確認

	これは fml 4.0 と同様に行なって下さい。


III部　fmlのカスタマイズ
10章　MLのメンバーができること

	$available_commands_for_user および
	$available_commands_for_stranger という変数で定義されています。

	一般ユーザ向けのコマンド
		help get mget get mget send subscribe add unsubscribe
		bye remove resign signoff chaddr confirm guide info
		objective summary

	誰でも使えるコマンド
		guide info add subscribe chaddr confirm

	＊これらは FML::Command::User:: クラスで定義されています。

11章　fml管理者ができること

	makefml で操作可能な項目は FML::Command::Admin:: クラスの
	コマンドすべてです。

		ＭＬの作成			OK
	[TODO]	ＭＬの削除
		ＭＬのメンバーの登録と削除	OK
		登録しているアドレスの変更	OK
	[TODO]	off/on
	[TODO]	まとめおくり
		リモート管理			OK
	[TODO]	ＭＬのカスタマイズはファイルの編集あるのみ

	注意: 当然リモートコマンドよりいろいろなことができます。

12章　fmlの設定ファイルを変更する

	各ＭＬのホームディレクトリにある config.cf を編集してください。

	[TODO] 設定支援ツールはまだありません。

	/etc/fml/ (とか /usr/local/etc/fml/ とか) 以下に
	デフォルトの .cf がおかれますし、サイト依存、ドメイン依存
	の .cf を作ることでサイト、ドメインごとの全ＭＬの
	デフォルトを変更することもできます。

13章　MLのスタイルのカスタマイズ (ケーススタディ)

	投稿の制御: $post_restrictions で制御
		
	コマンドメールの制御: $command_restrictions で制御

	コマンドメールの禁止: $command_restrictions で reject とだけ指定

	[TODO] 自動登録
		今はデフォルトで自動登録ですわ :-)
		まだ confirmation タイプしかありません。

	誰でも投稿可能:	$post_restrictions で permit_anyone

	メールマガジン型:
		$member_maps から $primary_member_map をはずす
		$member_maps に投稿可能なメンバーのリストを追加

	[TODO] モデレータ 

	[TODO] 自動ファイル返送

	[TODO] 複数の管理者による運用

	登録と削除をまとめておこなう

	[TODO] listserv 風のコマンドアドレス

	[TODO] qmail-ext によるコマンド

	階層化されたＭＬ: $member_maps $recipient_maps をよろしく書く

	procmail:	4.0 と同様だ

	[削除?] ＭＬ本体でコマンドメールも受けられるように


14章　ヘッダの書き換え

	FML::Header とフックを使えばできます。
	多くのヘッダ操作は FML::Header クラスの提供するアクセスメソッ
	ドになっています。

15章　fmlの返すメッセージをカスタマイズする

	/usr/local/share/fml/$fml_version/message/$charset/
	にあります。

16章　記事のフィルタリング

	実装済み (FML::Filter)
		検出できるルール: ヘッダ、本文、特殊なウィルス

	[TODO] 4.0 の ContertFilter にあたるものを FML::Filter へ統合する。

	[TOOD] 入力サイズ制限


17章　トラフィックを制限する（メール爆弾対策）

	[TODO] 未実装

	[TODO] トラフィック統計を取るために、あらかじめいろんなデータを
		DB に取りまくるべき？


18章　リモート管理（メールでfmlを操作する）

	管理者がコマンドメールで使える特権コマンドつまり admin コマン
	ドは $available_commands_for_privileged_user という変数で定義
	されているものが利用可能です。

	subscribe add unsubscribe bye remove resign signoff chaddr
	addadmin addpriv byeadmin byepriv get mget send password pass
	dir ls file list

	＊これらは FML::Command::Admin:: クラスで定義されています。

	[TODO] ”approve パスワード コマンド”型構文サポート

	[TODO] 非対称鍵暗号認証


19章　MLの暗号化

	[TODO] 未実装


20章　MLの記事をWWWで公開する

	デフォルトで作ることになっています。デフォルトでは

		~fml/public_html/fml/mlarchive/$domain/$ml_name/

	というディレクトリに作ります。このまま作るなり、適宜
	alias を切るなりして使うとよいでしょう。


21章　まとめ送り

	[TODO] 未実装


IV部　トラブルシューティング
	*** りゃく ***


V部　その他のトピック
26章　日々の運用について

	[TODO] ログファイルの expire
	[TODO] スプールの圧縮
	[TODO] スプールの expire
	[TODO] RCS


27章　エラーメールを自動解析する

	[TODO] モジュールは作ったが、組み込んでない;)

28章　メールサーバの変更/引越し

	手間は 4.0 とほとんど同じかな

29章　バーチャルドメイン

	デフォルトで考えてある。


VI部　fmlの内部構造と機能拡張
30章　変数と関数
31章　リストファイルのフォーマット
32章　fml.plプロセスの動作
33章　デバッグをする
34章　コマンドメールのカスタマイズ
35章　ケーススタディ：HOOKによる拡張


VII部　Advanced Study
36章　fmlからデータベースへのアクセス

	はじめから前提だぜ

37章　配送の高速化について

	[TODO] Mail::Delivery の LMTP モード


38章　試論：現代的サーバデザインについて
VIII部　付録
付録D　virus_check.phの例


---
$FML: STATUS.txt,v 1.2 2002/04/12 13:07:29 fukachan Exp $
