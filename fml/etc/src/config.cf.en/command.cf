=head1	command definitoins

=head2	process


# Descriptions: use commnd mail ?
#      History: none
#		use_command_mail_program (fml8 pre alpha)
#        Value: YES_OR_NO
#     Examples: yes
use_command_mail_function = ${use_command_mail_program:-yes}


# Descriptions: use admin command mail ?
#      History: $REMOTE_ADMINISTRATION
#        Value: YES_OR_NO
#     Examples: yes / no
use_admin_command_mail_fucntion = no


# Descriptions: add self introduction into the preamble of command mail reply. 
#      History: none
#        Value: YES_OR_NO
#     Examples: yes / no
use_command_mail_reply_preamble = yes


# Descriptions: add processing summary into the trailor of command mail reply.
#      History: none
#        Value: YES_OR_NO
#     Examples: yes / no
use_command_mail_reply_trailor = yes


=head2	size limit


# Descriptions: maximum size limit of article header passed from MTA.
#      History:
#        Value: NUM
#     Examples: 102400
incoming_command_mail_header_size_limit	= $default_mail_header_size_limit


# Descriptions: maximum size limit of article body passed from MTA.
#      History:
#        Value: NUM
#     Examples: 10240000
incoming_command_mail_body_size_limit	= $default_mail_body_size_limit


# Descriptions: maximum size limit of deliverd article header. 
#               (not yet implemented ;-)
#      History:
#        Value: NUM
#     Examples: 102400
outgoing_command_mail_header_size_limit	= $default_mail_header_size_limit


# Descriptions: maximum size limit of deliverd article body.
#               (not yet implemented ;-)
#      History:
#        Value: NUM
#     Examples: 10240000
outgoing_command_mail_body_size_limit	= $default_mail_body_size_limit


=head2	command specific limit


# Descriptions: maximu number of request in get command(s) in one mail.
#      History: $MGET_SEND_BACK_FILES_LIMIT
#        Value: NUM
#     Examples: 100
get_command_request_limit	=	100


=head2	filter


# Descriptions:
#      History:
#        Value: YES_OR_NO
#     Examples:
use_command_mail_filter	= 	yes
 

# Descriptions:
#      History:
#        Value: MIX ( command_mail_size_filter )
#     Examples:
command_mail_filter_functions	=	command_mail_size_filter


=head2	size based filter


# Descriptions: use size based filter
#      History:
#        Value: YES_OR_NO
#     Examples:
use_command_mail_size_filter	=	yes


# Descriptions: size based filter rules.
#               first match.
#               permit if no rule matched.
#      History:
#        Value: MIX (
#			check_header_size
#			check_body_size
#			check_command_limit
#			check_line_length_limit
#			permit
#		)
#     Examples:
command_mail_size_filter_rules	=	check_header_size
					check_body_size
					check_command_limit
					check_line_length_limit
					permit


=head2	command limit in one mail


# Descriptions: the numfer of effective commands in one command mail.
#      History: $MAXNUM_COMMAND_INPUT
#        Value: NUM
#     Examples: 100
command_mail_valid_command_limit	=	100


# Descriptions: the numfer of ineffective commands in one command mail.
#      History: $MAXNUM_COMMAND_INPUT
#        Value: NUM
#     Examples: 100
command_mail_invalid_command_limit	=	100


# Descriptions: maximum length of one command line.
#      History: $MAXLEN_COMMAND_INPUT
#        Value: NUM
#     Examples: 128
command_mail_line_length_limit	=	128


=head2	misc


# Descriptions: command prompt in message reply
#      History: hard coded in fml (< 4.0)
#        Value: PROMPT
#     Examples: >>>
command_mail_reply_prompt			=	>>>


# Descriptions: use comnfirmation in subscribe command ?
#      History: $MANUAL_REGISTRATION_TYPE
#        Value: SELECT ( confirmation manual )
#     Examples:
subscribe_command_auth_type	=	confirmation


# Descriptions: operate action automatically or manually by maintainer ?
#      History: $PERMIT_POST_HANDLER $PERMIT_COMMAND_HANDER
#        Value: SELECT ( automatic manual )
#     Examples:
subscribe_command_operation_mode	=	automatic


# Descriptions: use comnfirmation in chaddr command ?
#      History: $MANUAL_REGISTRATION_TYPE
#        Value: SELECT ( confirmation )
#     Examples:
chaddr_command_auth_type	=	confirmation


# Descriptions: operate action automatically or manually by maintainer ?
#      History: $PERMIT_POST_HANDLER $PERMIT_COMMAND_HANDER
#        Value: SELECT ( automatic manual )
#     Examples:
chaddr_command_operation_mode	=	automatic


# Descriptions: use comnfirmation in unsubscribe command ?
#      History: $MANUAL_REGISTRATION_TYPE
#        Value: SELECT ( confirmation )
#     Examples:
unsubscribe_command_auth_type	=	confirmation


# Descriptions: operate action automatically or manually by maintainer ?
#      History: $PERMIT_POST_HANDLER $PERMIT_COMMAND_HANDER
#        Value: SELECT ( automatic manual )
#     Examples:
unsubscribe_command_operation_mode	=	automatic


# Descriptions: effective command in normal commnd mail (for usual users)
#      History: @PERMIT_PROCEDURE @DENY_PROCEDURE
#        Value: FML_COMMAND_LIST
#     Examples:
user_command_mail_allowed_commands	=		help
					get
					mget
					get
					mget
					send
					subscribe
					add
					unsubscribe
					bye
					on
					off
					digest
					remove
					resign
					signoff
					chaddr
					confirm
					guide
					info
					admin
					objective
					summary


# Descriptions:
#      History:
#        Value: FML_COMMAND_LIST
#     Examples:
anonymous_command_mail_allowed_commands	=		guide
					info
					add
					subscribe
					chaddr
					$confirm_command_prefix


# Descriptions:
#      History:
#        Value: FML_COMMAND_LIST
#     Examples:
admin_command_mail_allowed_commands	=	subscribe
					add
					unsubscribe
					bye
					remove
					resign
					signoff
					chaddr
					addadmin
					addpriv
					byeadmin
					byepriv
					digest
					digeston
					digestoff
					get
					mget
					send
					password
					pass
					changepassword
					chpass
					initpass
					passwd
					dir
					ls
					file
					list


# Descriptions:
#      History:
#        Value: FML_COMMAND_LIST
#     Examples:
admin_cgi_allowed_commands	=		adduser
					deluser
					addadmin
					deladmin
					digeston
					digestoff
					list
					log
					newml
					rmml
					reviveml


# Descriptions:
#      History:
#        Value: FML_COMMAND_LIST
#     Examples:
commands_for_ml_admin_cgi	=	adduser
					deluser
					addadmin
					deladmin
					digeston
					digestoff
					list
					log


# Descriptions: special command name used as confirmation
#        Value: FML_COMMAND
#     Examples:
confirm_command_prefix		=	confirm


# Descriptions: special command name used as admin command mail
#        Value: FML_COMMAND
#     Examples:
privileged_command_prefix	=	admin


=head2	CGI


# Descriptions: listinfo template
#      History: /usr/local/fml/listinfo/
#        Value: DIR
#     Examples: /usr/local/share/fml/$fml_version/listinfo/$language
listinfo_template_dir	= $fml_share_dir/listinfo/$template_file_charset


# Descriptions: base directory for ML information
#      History: none
#        Value: DIR
#     Examples: ~fml/public_html/fml/listinfo/fml.org/elena
listinfo_base_dir	= $fml_owner_home_dir/public_html/fml/listinfo


# Descriptions: directory for ML information
#      History: none
#        Value: DIR
#     Examples: ~fml/public_html/fml/listinfo/fml.org/elena
listinfo_dir	= $listinfo_base_dir/$ml_domain/$ml_name


=head2	inform filter rejection


# Descriptions: inform filter rejection ?
#      History: hard-coded.
#        Value: YES_OR_NO
#     Examples: yes
use_command_mail_filter_reject_notice	=	yes


# Descriptions: recipients to inform
#      History: hard-coded.
#        Value: MIX ( maintainer sender )
#     Examples: maintainer sender
command_mail_filter_reject_notice_recipients	=	maintainer
							sender


# Descriptions: how fml refer the rejeced message.
#               We prefer string not multipart to avoid parsing of MUA.
#      History: string in fml 4.0.
#        Value: SELECT ( multipart string )
#     Examples: string
command_mail_filter_reject_notice_data_type	=	string


=head2	newml command


# Descriptions: template files used in running "makefml newml"
#        Value: FILE_LIST
#     Examples:
newml_command_template_files 		=	config.cf


# Descriptions: fml_owner value used by newml command.
#               this value is a destination where error mail are forwardeded.
#               user "fml" by default (same as $fml_owner in main.cf).
#        Value: RFC822_USER_OR_RFC822_ADDRESS
#     Examples:
newml_command_ml_admin_default_address 	=	$fml_owner



=head2	list command


# Descriptions: default map to show by list command.
#      History: none
#        Value: MAP_LIST
#     Examples:
list_command_default_maps		=	$recipient_maps


=head2	log command


# Descriptions: show the last N lines of log file where N == 100.
#      History: $ADMIN_LOG_DEFAULT_LINE_LIMIT
#        Value: NUM
#     Examples: 100
log_command_tail_starting_location	=	100

