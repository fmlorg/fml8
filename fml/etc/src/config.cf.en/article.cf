=head1	article handling


=head2	article delivery system

# Descriptions: user article delivery function ?
#      History:
#        Value: yes / no
#     Examples:
use_article_delivery	=	yes

# Descriptions: specify transport for article delivery.
#               try MTA of $smtp_servers incrementary in the case of smtp.
#      History: none
#        Value: smtp / lmtp
#     Examples: smtp
article_delivery_transport	=	smtp


=head2	article sequence number


# Descriptions: file to store sequence number
#      History: $SEQ_FILE
#        Value: filename
#     Examples:
article_sequence_file	= $sequence_file


=head2 ACL


# Descriptions: how to inform the rejected message 
#               when the filter system rejects.
#               We prefer string not mime/multipart to avoid parsing by MUA.
#      History: string in 4.0.
#        Value: multipart / string
#     Examples: string
article_post_restrictions_reject_notice_data_type	=	string


=head2	size limit


# Descriptions: maximum size limit of article header passed from MTA.
#      History:
#        Value: NUM
#     Examples: 102400
incoming_article_header_size_limit	= $default_mail_header_size_limit


# Descriptions: maximum size limit of article body passed from MTA.
#      History:
#        Value: NUM
#     Examples: 10240000
incoming_article_body_size_limit	= $default_mail_body_size_limit


# Descriptions: maximum size limit of deliverd article header. 
#               (not yet implemented ;-)
#      History:
#        Value: NUM
#     Examples: 102400
outgoing_article_header_size_limit	= $default_mail_header_size_limit


# Descriptions: maximum size limit of deliverd article body.
#               (not yet implemented ;-)
#        Value: NUM
#     Examples: 10240000
outgoing_article_body_size_limit	= $default_mail_body_size_limit


=head2	filter


# Descriptions:
#      History: fml8 rearragena fml4 filter functions and integrates them
#		into one.
#		Roughly speaking, fml8 filter is composed of the following
#			$USE_DISTRIBUTE_FILTER
#			$INCOMING_MAIL_SIZE_LIMIT
#			ADD_CONTENT_HANDLER()
#		functions.
#        Value: yes / no
#     Examples: yes
use_article_filter	= 	yes
 

# Descriptions:
#      History:
#        Value:
#     Examples:
article_filter_functions	=	article_size_filter
					article_header_filter
					article_non_mime_filter
					article_mime_component_filter
					article_text_plain_filter


=head2	size based filter


# Descriptions: use size based filter.
#      History: no
#        Value: yes / no
#     Examples:
use_article_size_filter	=	yes


# Descriptions: size based filter rules.
#               first match. 
#               permit post if no rule matched.
#      History:
#        Value:
#     Examples:
article_size_filter_rules	=	check_header_size
					check_body_size
					permit


=head2	header base filter


# Descriptions: use header based filter ?
#      History: disabled by default.
#               "yes" always if $USE_DISTRIBUTE_FILTER is yes.
#        Value: yes / no
#     Examples:
use_article_header_filter		=	yes


# Descriptions: header filter rules.
#               first match. 
#               permit post if no rule matched.
#      History: fml4 has no check_date rule.
#        Value:
#     Examples:
article_header_filter_rules		=	check_message_id
						check_date
						permit


=head2	filter for non MIME structure


# Descriptions: dummy
#      History: disabled by default.
#		!MIME of 4.0 content filter.
#        Value: yes / no
#     Examples:
use_article_non_mime_filter		=	yes


# Descriptions: dummy
#      History:
#        Value: permit / reject
#     Examples: permit
article_non_mime_filter_rules		=	permit


# Descriptions: MIME structure based filter
#      History: 4.0 content filter. disabled by default.
#        Value: yes / no
#     Examples:
use_article_mime_component_filter	=	yes


# Descriptions: file of filter rules
#      History: @CONTENT_HANDLER
#        Value:
#     Examples:
article_mime_component_filter_rules	= $fml_config_dir/mime_component_filter



=head2	filter for text/plain


# Descriptions: use text/plain filter, which is a simple syntax checker.
#      History: 4.0's EnvelopeFilter.
#		half of the following rules applied when
#		$USE_DISTRIBUTE_FILTER is enabled.
#        Value: yes / no
#     Examples:
use_article_text_plain_filter		=	yes


# Descriptions: filter rules of text/plain filter.
#               first match.
#               permit post if no rule matched.
#      History: See kern/libenvf.pl for more detail.
#		[DISABLED BY DEFAULT]
#
#			reject_not_iso2022jp_japanese_string
#				<=> FILTER_ATTR_REJECT_INVALID_JAPANESE
#			reject_old_fml_command_syntax
#				<=> FILTER_ATTR_REJECT_COMMAND
#			reject_japanese_command_syntax
#				<=> FILTER_ATTR_REJECT_2BYTES_COMMAND
#
#		[ENABLED BY DEFAULT]
#
#			reject_null_mail_body
#				<=> FILTER_ATTR_REJECT_NULL_BODY
#			reject_invalid_fml_command_syntax
#				<=> FILTER_ATTR_REJECT_INVALID_COMMAND
#			reject_one_line_message
#				<=> FILTER_ATTR_REJECT_ONE_LINE_BODY
#			reject_ms_guid
#				<=> FILTER_ATTR_REJECT_MS_GUID
#
#         Note: permit by default 
#        Value:
#     Examples:
article_text_plain_filter_rules	=	reject_not_iso2022jp_japanese_string
					reject_null_mail_body
					reject_one_line_message
					reject_old_fml_command_syntax
					reject_invalid_fml_command_syntax
					reject_japanese_command_syntax
					reject_ms_guid
					permit


=head2	inform the filter rejection


# Descriptions: infor the filter rejection ?
#      History: halfly hard-coded in fml 4.0.
#		notice is always sent to maintainer, 
#		but not to sender by default.
#		$FILTER_NOTIFY_REJECTION controlls notice to sender.
#        Value: yes / no
#     Examples: yes
use_article_filter_reject_notice	=	yes


# Descriptions: recipients to inform
#      History: halfly hard-coded in fml 4.0.
#		notice is always sent to maintainer, 
#		but not to sender by default.
#		$FILTER_NOTIFY_REJECTION controlls notice to sender.
#        Value: maintainer | sender
#     Examples: maintainer sender
article_filter_reject_notice_recipients	=	maintainer
						sender


# Descriptions: how fml refer the rejeced message.
#               We prefer string not multipart to avoid parsing of MUA.
#      History: string in fml 4.0.
#        Value: multipart / string
#     Examples: string
article_filter_reject_notice_data_type	=	string
