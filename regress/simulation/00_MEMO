		雑多なメモ
		Last Modified: $Date$

	XXX 作業したら TODO/STATUS.txt もアップデートしてね XXX

	XXX
	XXX fml 4.0 と同じディレクトリ名は使わないように    XXX
	XXX


○	content filter をとととせいりせいや 

	fml.org でつかうねんて


○	ちょっと見栄えが？

   FML::CGI::ThreadTrack
	見栄えを config.cgi などと合わせる方が良いでしょう
	＃ テーブルベースの見栄え


○	ファイルを用意しただけやんシリーズ;)
	これから改造するので、ほとんど未修正のままのこす

	FML::Process::Qmail
	FML::Filter::TrafficMonitor
	IO::Adapter::LDAP


○	remove $msg->{ next }

	FML/Filter/TextPlain.pm
	Mail/Message/ToHTML.pm
	Mail/Message.pm
	Mail/Bounce/Postfix19991231.pm
	Mail/Bounce/Qmail.pm


○	ちょっとコーディングスタイルが古いかな?

		FML::Header
		FML::Header::Subject
		File::Sequence
		Mail::Delivery::* (?)
		FML::Filter
		FML::Filter::TextPlain
		FML::Filter::Header

	ちょっとコーディングスタイルが古いかな?
	近々に見直すべし


○	ドキュメント( tutorial )

	module/Mail::Message::ToHTML
	threadtrack/chapter.sgml
	threadtrack/tools.sgml
	
	usage/ がいまいち
	fml bible のパートIIIの最初の部分のように編成し直すべき


○	makefml でうごかない？

			get	***disabled***
			mget	***disabled***
			send	***disabled***
			password	不要？
			pass		不要？
			dir 	＊不要？
			ls 	＊不要？
			file 	＊不要？
			list 	＊不要？

	* CGI でも不要？

		dir ls file

	   FML::Command::Admin::dir
		cgi_menu() ?
		ディレクトリ listing してくれる perl module ないかな？

	* makefml get ???

	ところで、誰に送信するんじゃ？ :-) って、そうか、makefml じゃ
	なくて admin コマンドの時は考えなくてもいいからだな、それは …



○	mail-message-0-2 タグの後に付け加えられたコードについて再考

	s/content/data/g;

	we need our own MIME generator ???


○ Mail::ThreadTrack

	ドキュメントの見直し（？）

	subdir によって、ちょくせつのリンクがつらい？

	あるごりずむ ?

 	+
		+
			+ (3)


	+ (4)
		+

	となっているときに (3) の next_thread はいつ次のリンクがわかる
	のか？予言できない。過去に向かってスレッドを修正するアルゴリズ
	ムなので、過去の修正がいつ行なわれるかは良くわからない;)

	→ (4) が来た時に (3) を修正するべき？

	とりあえず、すれっど全部のファイルに修正を試みるべきだ。
	ローカルな更新は、あまりよい結果にならないようだ。


○ 	compare_euc_string($buf, $pat)

=head2 C<compare_euc_string($buf, $pat)>

search $pat in EUC string $buf.
return 1 if found or 0 if not.

=cut


# Descriptions: compare Japanese EUC strings
#    Arguments: OBJ($self) STR($a) STR($pat)
# Side Effects: none
#      History: fml 4.0: EUCCompare($buf, $pat)
#               where $pat should be $& (matched pattern)
# Return Value: NUM(1 or 0)
sub compare_euc_string
{
    my ($self, $a, $pat) = @_;

    # XXX validate $a and $pat ???
    #     e.g. defined($a) ?

    # (Refeence: jcode 2.12)
    # $re_euc_c    = '[\241-\376][\241-\376]';
    # $re_euc_kana = '\216[\241-\337]';
    # $re_euc_0212 = '\217[\241-\376][\241-\376]';
    my ($re_euc_c, $re_euc_kana, $re_euc_0212);
    $re_euc_c    = '[\241-\376][\241-\376]';
    $re_euc_kana = '\216[\241-\337]';
    $re_euc_0212 = '\217[\241-\376][\241-\376]';

    # always true if given buffer is not EUC.
    if ($a !~ /($re_euc_c|$re_euc_kana|$re_euc_0212)/) {
	&Log("EUCCompare: do nothing for non EUC strings");# if $debug;
	return 1;
    }

    # extract EUC code (e.g. .*EUC_PATTERN.*)
    # but how to do for "EUC ASCII EUC" case ???
    my ($pa, $loc, $i);
    do {
	if ($a =~ /(($re_euc_c|$re_euc_kana|$re_euc_0212)+)/) {
	    $pa  = $1;
	    $loc = index($pa, $pat);
	}

	print STDERR "buf = <$a> pa=<$pa> pat=<$pat> loc=$loc\n" if $debug;

	return 1 if ($loc % 2) == 0;

	$a = substr($a, index($a, $pa) + length($pa) );
    } while ($i++ < 16);

    0;
}


----------
$FML: 00_MEMO,v 1.51 2002/09/29 05:30:13 fukachan Exp $
