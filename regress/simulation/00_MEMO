		雑多なメモ
		Last Modified: $Date$

	XXX 作業したら TODO/STATUS.txt もアップデートしてね XXX

	XXX
	XXX fml 4.0 と同じディレクトリ名は使わないように    XXX
	XXX


○	File::CachdDir と Tie::JournaledDir

	どうつかいわける？

	サイズの上限がある → リングバッファ → File::CacheDir

		only ?
		FML/Process/Kernel.pm
		

	ひたすら書く＋ expire を目的にする → じゃーなる

		でも時間方向の File::CacheDir はそれと一緒じゃん？

		Tie::JournaledDir の keys はまちがってないか？
			ファイルごとに JournaledFile しても重複するだろ？

	これらとはべつに

		key => [
				ろぐ1	 (どっかのふぁいるのどっかの行)
				ろぐ2	 (どっかのふぁいるのどっかの行)
				ろぐ3	 (どっかのふぁいるのどっかの行)
			] 

	がたのでーたをたくわえるこうぞうがほしい

	いや、こういうこうぞうをしてるか、
	このかたちでとりだすアクセスメソッドがほしい


○	FML::Article

	subdir の取り扱いが不十分
	0700 とかハードコードされてるじょ


○	[DOC] Delivered-To をけそう tips


○	subject でふぉわーどさきをかえる tips をしこもう


○	コマンド拡張の仕方


○	メッセージの拡張の仕方


○	フィルタ

   * filter statistics
	統計をとりたい
	統計をみせろ コマンド
	それをするためのデータベースを最初から用意すること

   * MTI
	fmltreadで使っているDBをうまく利用できないものでしょうか？


○	RFC 3282

        Title:	    Content Language Headers
        Status:	    Standards Track


○	auto-responses

	http://www.cs.utk.edu/~moore/internet-drafts/draft-moore-auto-email-response-00.txt


○	Mail::Message::*Code は日本語依存過ぎじゃない？


○	CGI で xxx-admin さんをかすたまいずしたい？


○	remove $msg->{ next }

	FML/Filter/BodyCheck.pm
	Mail/HTML/Lite.pm
	Mail/Message.pm
	Mail/Bounce/Postfix19991231.pm
	Mail/Bounce/Qmail.pm


○	etc/src/config.cf.ja/ の説明文を見直す


○	ファイルを用意しただけやんシリーズ;)
	これから改造するので、ほとんど未修正のままのこす

	FML/Command/Admin/edit.pm
	FML::Process::Qmail
	FML/Filter/TrafficMonitor.pm
	IO::Adapter::LDAP


○ Language::Japanese::Subject のマージが中途半端?

   "Language::Japanese::Subject::CUT_OFF_RERERE_PATTERN" used only once:


○	FML::Language:: はどうよ

	これ自体はまぁいいとはおもうけど、他のモジュールで使うにはちょっと
	うとおしいくらい深くないか？

		Srting::is_japanese_string()

	などをトップレベルインターフェイスにするべきじゃないかな	

	だめ、ぶつかるだろうってば;)


○ mail-message-0-2 タグの後に付け加えられたコードについて再考

	s/content/data/g;

	we need our own MIME generator ???

○ pre-cgi タグの後に付け加えられたコードについて再考

   relocate codes added after "pre-cgi" tag.
   Especially the relation amon

	fml/lib/FML/Process/CGI.pm
	fml/libexec/loader


○	ループチェック

	MAIL_LIST != MAINTAINER

	config の diag か、これは


○	必要かしら？

	$default_umask

	time_zone config?


○	ちょっと見栄えが？

   FML::CGI::ThreadTrack
	見栄えを config.cgi などと合わせる方が良いでしょう
	＃ テーブルベースの見栄え

○	ちょっとコーディングスタイルが古いかな?

   FML::Header
   FML::Header::Subject
   File::Sequence
   Mail::Delivery::* (?)
   FML/Filter.pm
   FML/Filter/BodyCheck.pm
   FML/Filter/HeaderCheck.pm

	ちょっとコーディングスタイルが古いかな?
	近々に見直すべし


○	ドキュメント( tutorial )

	setup/test.sgml
	usage/fmlhtmlify.sgml
	module/IO::Adapter.sgml
	module/Mail::HTML::Lite.sgml
	command/extension.sgml
	threadtrack/chapter.sgml
	threadtrack/tools.sgml
	
	usage/ がいまいち(fml bible のパートIIIの最初の部分にあたるもの)
		usage/command.sgml
		usage/post.sgml


○	makefml でうごかない？

			get	***disabled***
			mget	***disabled***
			send	***disabled***
			password	不要？
			pass		不要？
			dir 	＊不要？
			ls 	＊不要？
			file 	＊不要？
			list 	＊不要？

	* CGI でも不要？

		dir ls file

	   FML::Command::Admin::dir
		cgi_menu() ?
		ディレクトリ listing してくれる perl module ないかな？

	* makefml get ???

	ところで、誰に送信するんじゃ？ :-) って、そうか、makefml じゃ
	なくて admin コマンドの時は考えなくてもいいからだな、それは …



○ Mail::ThreadTrack 

	ドキュメントの見直し（？）

	subdir によって、ちょくせつのリンクがつらい？

	あるごりずむ ?

 	+
		+
			+ (3)


	+ (4)
		+

	となっているときに (3) の next_thread はいつ次のリンクがわかる
	のか？予言できない。過去に向かってスレッドを修正するアルゴリズ
	ムなので、過去の修正がいつ行なわれるかは良くわからない;)

	→ (4) が来た時に (3) を修正するべき？

	とりあえず、すれっど全部のファイルに修正を試みるべきだ。
	ローカルな更新は、あまりよい結果にならないようだ。


====================================================================
[付録]	仕えそうなモジュール？


Tie::Persistent_hash - persistent hash


	If you use the line

	        use Tie::STDERR;

	at the start of your script (and maybe CGI script), any output
	that would go to STDERR will be sent by email to root. You can
	specify the recipient, for example

	        use Tie::STDERR 'adelton';


=======================================
Tie::TransactHash README


	This is the Tie::TwoLevelHash module.  It is a TIEHASH
	interface which lets you tie to a text file which is a
	multi-dimensional (two level) hash.

	To use it, tie a hash to a directory:

	# Open in read/write mode
	tie(%hash, 'Tie::TwoLevelHash', $file, 'rw');


=======================================
HTML::CGIChecker



=======================================
HTML::DynamicTemplate - HTML template class.


=======================================
HTML::Template - a Perl module to use HTML Templates


=======================================
HTML/EasyTemplate version Version 0.985


=======================================
HTML::Subtext - Perform text substitutions on an HTML template

   SYNOPSIS
      use HTML::Subtext;
      %context = ( ... ); # Hash of names to substitution text
      $p = HTML::Subtext->new('CONTEXT' => \%context);
      $p->parse_file("template.html");


=======================================
HTML::WWWTheme


	HTML::WWWTheme is a module that creates a standard header and
	footer for HTML pages.  This header includes <BODY> tags, and
	is designed to wrap around valid body HTML.

=======================================
HTML::WebMake

	WebMake is a simple content management system, based around a
	templating system for HTML documents, with lots of built-in
	smarts about what a "typical" informational website needs in
	the way of functionality; metadata, sitemapping, navigational
	aids, and (of course) embedded perl code. ;)



=======================================
HTML::Summary

	The HTML::Summary module produces summaries from the textual
	content of web pages. It does so using the location heuristic,
	which determines the value of a given sentence based on its
	position and status within the document; for example,
	headings, section titles and opening paragraph sentences may
	be favoured over other textual content. A LENGTH option can be
	used to restrict the length of the summary produced.

	This distribution contains the HTML::Summary module, and some
	supporting modules. The full list of modules is:


=======================================
HTML::FromText - mark up text as HTML

         use HTML::FromText;
         print text2html($text, urls => 1, paras => 1, headings => 1);


================
use HTML::PageIndex;

	$foo = new HTML::PageIndex;


================
HTML::Stream

	This a lightweight form generation module, which can be used
	with either CGI.pm (version 2 or 3), or (inside mod_perl)
	Apache::Request.  The module provides similar facilities to
	CGI.pm's HTML tag generation routines, but is restricted to
	form field generation tags, with sticky values.  Also, the
	interface is not so flexible as CGI.pm's, in order to keep the
	code size down.


================
HTML::STable - Create HTML tables using SIMPLE interface.


	STable name driven from Simple Table.


================
HTML::Pager - Perl module to handle CGI HTML paging of arbitary data


	This module handles the paging of data coming from an
	arbitrary source and being displayed using HTML::Template and
	CGI.pm.  It provides an interface to pages of data similar to
	many well-known sites, like altavista.digital.com or
	www.google.com.

	This module uses HTML::Templateto do all its HTML generation.
	While it is possible to use this module without directly using
	HTML::Template, it's not very useful.  Modification of the
	look-and-feel as well as the functionality of the resulting
	HTML should all be done through HTML::Template objects.  Take
	a look at the the HTML::Template perldocs for more info.



================
HTML::Navigation


	HTML::Navigation is Perl module for creating navigation
	bars/menus of arbitrary design and structure within HTML
	documents.


================
Mason

	elcome to Mason, a Perl-based web site development and
	delivery system.  Mason allows web pages and sites to be
	constructed from shared, reusable building blocks called
	components. Components contain a mix of Perl and HTML, and can
	call each other and pass values back and forth like
	subroutines. Components increase modularity and eliminate
	repetitive work: common design elements (headers, footers,
	menus, logos) can be extracted into their own components where
	they need be changed only once to affect the whole site.

	See http://www.masonhq.com/ for more information.



================
HTML::Widgets::Menu - Builds an HTML menu


----------
$FML: 00_MEMO,v 1.41 2002/08/01 14:10:28 fukachan Exp $
