		雑多なメモ
		Last Modified: $Date$

	XXX 作業したら TODO/STATUS.txt もアップデートしてね XXX

	XXX
	XXX fml 4.0 と同じディレクトリ名は使わないように    XXX
	XXX


[TODO]	fml 4 の cf を解釈できる互換ルーチン

		cf シンタックスを読んで、
		＃ そういえば、Config::Tiny で出来るね

		8 の .cf シンタックスに置き換えて
		値をよろしく変換する （←ここがむずかしー）


[TODO]	01_RFC_IO_ADAPTER.txt
[TODO]	01_RFC_UPGRADE.txt

	かんがえよー／まとめようー

[TODO]	01_RFC_FILTER.txt

	もう OK ぽいので、ドキュメント化


[TODO]	fml $ml spool {status,convert}: --srcdir= とか必要じゃない？

		コマンドラインオプションは、OK？

[TODO]	fml $ml thread $subcommand: モジュールの clean up

		コマンドラインオプションは、OK？

		Mail::ThreadTrack
		FML::Command::Admin::thread
		FML::Article::Thread		(不要じゃないの？)

	どこに、なんのメソッドがあるべきなのか？	


[TODO]	*_maps をよぶまえには MUTEX ロックを

	ん〜 メンバーリストは READ,WRITE LOCK だろ 
		いや、実装はかなりむつかしいかも… ;)

	→ giant lock をなくす

	*_map を使うモジュール一覧

		FML/Credential.pm
		FML/Digest.pm (reply_message() にわたすだけだが)
		FML/Process/Utils.pm

		FML/Command/Auth.pm
		FML/Command/UserControl.pm

		FML/Command/Admin/chaddr.pm		×
		FML/Command/Admin/changepassword.pm	×
			だめよ、コマンドの中にもってては
			FML::Command::何か に移動だ！

		Mail/Delivery/Queue.pm
		Mail/Delivery/SMTP.pm
		Mail/Delivery.pm
			Mail::Delivery モジュールはかならず wrap


[TODO]	受信者としてだけの登録 (add2actives 相当、メールマガジンなど)は？

	admin コマンド アドレス        --as-recipient

	例:
	admin useradd  rudo@nuinui.net --as-recipient

	?

	＊ こういう形式を認めると言うのはどうだ？

		fml $ml コマンド-サブコマンド アドレス
		fml $ml useradd-as-recipient アドレス


[TODO]	off/on の問題

	on は primary_recipient_map にだけ作用するが、
	off は recipient_maps すべてに作用する(マッチする全ての map を
	変化させる)

	unsubscribe はすべての map をサーチし、該当するもの全てを
	削除する。	 


[TODO]	reply-to: special hack

	   if (	To: ml1, ml2 ) {
		set Reply-To: ml1, ml2
	   }


[TODO]	libexec/relocated , Process/Relocated

	「このＭＬはもうありません」
	deny とはちょっとちがうとおもうねぇ。

		ml
		ml-ctl
	宛に来たもの両方に返事を返すべきだろう。


[TODO]	Accept-Language: を考慮する


[TODO]	2002 年のオーバホールの残り

  ＊ 要 BUG FIX
	Mail/Delivery/SMTP.pm

  ＊おもたい
	FML/Process/Kernel.pm
	Mail/Message.pm

   * IN/OUT のチェック
	Mail/Message/ToHTML.pm

	OUT のちぇっくで最重要なのは？

	Mail/Message/ToHTML.pm
	Mail/ThreadTrack/Print

	Mail/Message/Print などに集結させるべきだろう？

		print_axss (against cross site scripting).

[TODO]	IO::Adapter

	get_*() には File or !File にだけしかないのがある？

	% grep -r 'sub get' ...

		IO::Adapter::File	sub get_value_as_str
		IO::Adapter::File	sub get_value_as_array_ref

	XXX get_value_as_* ってつかわれてはいないのですよ、いまはね

	SQL まわりの改良を （もういいの？）

	write LDAP ;-)

   [チェックリスト]
	IO/Adapter/File.pm

	IO/Adapter/Array.pm
		IO/Adapter/NIS.pm
		IO/Adapter/UnixGroup.pm

	IO/Adapter/DBI.pm
		IO/Adapter/MySQL.pm


[TODO]	時間つき newml だと、あれか… (上述の newml)

	libexec/auto-newml ?


[TODO]	時間つき subscribe 
	時間つき newml だと、あれか… (上述の newml)

	subscribe -> 一カ月すると削除される？


[TODO]	フィルタ: 古いメールは SPAM に違いない


[TODO]	digest こまんど？ for CGI


[TODO]	digest こまんど？ for user


[TODO]	ファイルを用意しただけやんシリーズ;)
	これから改造するので、ほとんど未修正のままのこす

		一度削除するか？

	FML::Process::Qmail
	FML::Filter::TrafficMonitor


[TODO]	remove $msg->{ next }

	FML/Filter/TextPlain.pm
	Mail/Message/ToHTML.pm
	Mail/Message.pm
	Mail/Bounce/Postfix19991231.pm
	Mail/Bounce/Qmail.pm


[TODO]	ちょっとコーディングスタイルが古いかな?

		FML::Header
		FML::Header::Subject
		File::Sequence
		Mail::Delivery::* (?)
		FML::Filter::TextPlain
		FML::Filter::Header

	ちょっとコーディングスタイルが古いかな?
	近々に見直すべし


[TODO]	ドキュメント( tutorial )

	module/Mail::Message::ToHTML
	threadtrack/chapter.sgml
	threadtrack/tools.sgml
	
	usage/ がいまいち
	fml bible のパートIIIの最初の部分のように編成し直すべき


[TODO]	makefml で動くもの、動かないものは何？

			get	***disabled***
			mget	***disabled***
			send	***disabled***
			password	不要？
			pass		不要？
			dir 	＊不要？
			ls 	＊不要？
			file 	＊不要？
			list 	＊不要？

	* CGI でも不要？

		dir ls file

	   FML::Command::Admin::dir
		cgi_menu() ?
		ディレクトリ listing してくれる perl module ないかな？

	* makefml get ???

	ところで、誰に送信するんじゃ？ :-) って、そうか、makefml じゃ
	なくて admin コマンドの時は考えなくてもいいからだな、それは …



[TODO]	FML::Process::Scheduler ってかなり？

	うーん、なかみがない。予約だけされてるモジュールやね
	mkdir するだけ？ :-)


[TODO]	Mail::ThreadTrack のクリーニング

	output とモードの明瞭化を
	どこでどう CSS とたたかうの？
	Mail::ThreadTrack::Analyze をきれいにしないとね


	index.html (fml-devel 234)
	 	最近のＭＬのレビュー 
	 		＋
	 	選択画面 → index thread monthly

	ちょっと見栄えが？
		見栄えを config.cgi などと合わせる方が良いでしょう
		＃ テーブルベースの見栄え

	ドキュメントの見直し（？）

	subdir によって、ちょくせつのリンクがつらい？

	あるごりずむ ?

 	+
		+
			+ (3)


	+ (4)
		+

	となっているときに (3) の next_thread はいつ次のリンクがわかる
	のか？予言できない。過去に向かってスレッドを修正するアルゴリズ
	ムなので、過去の修正がいつ行なわれるかは良くわからない;)

	→ (4) が来た時に (3) を修正するべき？

	とりあえず、すれっど全部のファイルに修正を試みるべきだ。
	ローカルな更新は、あまりよい結果にならないようだ。


----------
$FML: 00_MEMO,v 1.69 2003/03/16 05:02:13 fukachan Exp $
